// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: example/hello/v1/hello.proto

package hellov1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Hello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hello string `protobuf:"bytes,1,opt,name=hello,proto3" json:"hello,omitempty"`
}

func (x *Hello) Reset() {
	*x = Hello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_hello_v1_hello_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_example_hello_v1_hello_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_example_hello_v1_hello_proto_rawDescGZIP(), []int{0}
}

func (x *Hello) GetHello() string {
	if x != nil {
		return x.Hello
	}
	return ""
}

type DisabledExample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// このバリデーションは無効化される
	Val string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *DisabledExample) Reset() {
	*x = DisabledExample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_hello_v1_hello_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisabledExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisabledExample) ProtoMessage() {}

func (x *DisabledExample) ProtoReflect() protoreflect.Message {
	mi := &file_example_hello_v1_hello_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisabledExample.ProtoReflect.Descriptor instead.
func (*DisabledExample) Descriptor() ([]byte, []int) {
	return file_example_hello_v1_hello_proto_rawDescGZIP(), []int{1}
}

func (x *DisabledExample) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type OneofExample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*OneofExample_Val1
	//	*OneofExample_Val2
	Union isOneofExample_Union `protobuf_oneof:"union"`
}

func (x *OneofExample) Reset() {
	*x = OneofExample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_hello_v1_hello_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofExample) ProtoMessage() {}

func (x *OneofExample) ProtoReflect() protoreflect.Message {
	mi := &file_example_hello_v1_hello_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofExample.ProtoReflect.Descriptor instead.
func (*OneofExample) Descriptor() ([]byte, []int) {
	return file_example_hello_v1_hello_proto_rawDescGZIP(), []int{2}
}

func (m *OneofExample) GetUnion() isOneofExample_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *OneofExample) GetVal1() string {
	if x, ok := x.GetUnion().(*OneofExample_Val1); ok {
		return x.Val1
	}
	return ""
}

func (x *OneofExample) GetVal2() string {
	if x, ok := x.GetUnion().(*OneofExample_Val2); ok {
		return x.Val2
	}
	return ""
}

type isOneofExample_Union interface {
	isOneofExample_Union()
}

type OneofExample_Val1 struct {
	Val1 string `protobuf:"bytes,1,opt,name=val1,proto3,oneof"`
}

type OneofExample_Val2 struct {
	Val2 string `protobuf:"bytes,2,opt,name=val2,proto3,oneof"`
}

func (*OneofExample_Val1) isOneofExample_Union() {}

func (*OneofExample_Val2) isOneofExample_Union() {}

type StringValidationExample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstValue    string `protobuf:"bytes,1,opt,name=const_value,json=constValue,proto3" json:"const_value,omitempty"`
	LenValue      string `protobuf:"bytes,2,opt,name=len_value,json=lenValue,proto3" json:"len_value,omitempty"`
	MinLenValue   string `protobuf:"bytes,3,opt,name=min_len_value,json=minLenValue,proto3" json:"min_len_value,omitempty"`
	MaxLenValue   string `protobuf:"bytes,4,opt,name=max_len_value,json=maxLenValue,proto3" json:"max_len_value,omitempty"`
	LenBytesValue string `protobuf:"bytes,5,opt,name=len_bytes_value,json=lenBytesValue,proto3" json:"len_bytes_value,omitempty"`
	MinBytesValue string `protobuf:"bytes,6,opt,name=min_bytes_value,json=minBytesValue,proto3" json:"min_bytes_value,omitempty"`
	MaxBytesValue string `protobuf:"bytes,7,opt,name=max_bytes_value,json=maxBytesValue,proto3" json:"max_bytes_value,omitempty"`
	PatternValue  string `protobuf:"bytes,8,opt,name=pattern_value,json=patternValue,proto3" json:"pattern_value,omitempty"`
	PrefixValue   string `protobuf:"bytes,9,opt,name=prefix_value,json=prefixValue,proto3" json:"prefix_value,omitempty"`
	// suffix_value = "Hello, World" OK
	// suffix_value = "Hello, Japan" NG
	SuffixValue string `protobuf:"bytes,10,opt,name=suffix_value,json=suffixValue,proto3" json:"suffix_value,omitempty"`
	// contains_value = "apple, banana, orange" OK
	// contains_value = "apple, orange" NG
	ContainsValue string `protobuf:"bytes,11,opt,name=contains_value,json=containsValue,proto3" json:"contains_value,omitempty"`
	// not_contains_value = "apple, banana, orange" NG
	// not_contains_value = "apple, orange" OK
	NotContainsValue string `protobuf:"bytes,12,opt,name=not_contains_value,json=notContainsValue,proto3" json:"not_contains_value,omitempty"`
	// in_value = "Go" OK
	// in_value = "Rust" NG
	InValue string `protobuf:"bytes,13,opt,name=in_value,json=inValue,proto3" json:"in_value,omitempty"`
	// not_in_value = "Go" NG
	// not_in_value = "Rust" OK
	NotInValue string `protobuf:"bytes,14,opt,name=not_in_value,json=notInValue,proto3" json:"not_in_value,omitempty"`
	// protovalidate@example.com OK
	// protovalidate.example.com NG
	EmailValue string `protobuf:"bytes,15,opt,name=email_value,json=emailValue,proto3" json:"email_value,omitempty"`
	// 127.0.0.1 NG
	// https://example.com NG
	// example.com OK
	HostnameValue string `protobuf:"bytes,16,opt,name=hostname_value,json=hostnameValue,proto3" json:"hostname_value,omitempty"`
	// 127.0.0.1 OK
	// ::192.0.2.33 OK
	// 2001:0db8:85a3:0000:0000:8a2e:0370:7334 OK
	// 255.255.255.256 NG
	IpValue string `protobuf:"bytes,17,opt,name=ip_value,json=ipValue,proto3" json:"ip_value,omitempty"`
	// 127.0.0.1 OK
	// 2001:0db8:85a3:0000:0000:8a2e:0370:7334 NG
	Ipv4Value string `protobuf:"bytes,18,opt,name=ipv4_value,json=ipv4Value,proto3" json:"ipv4_value,omitempty"`
	// 127.0.0.1 NG
	// 2001:0db8:85a3:0000:0000:8a2e:0370:7334 OK
	Ipv6Value string `protobuf:"bytes,19,opt,name=ipv6_value,json=ipv6Value,proto3" json:"ipv6_value,omitempty"`
	// https://example.com OK
	// example.com NG
	UriValue string `protobuf:"bytes,20,opt,name=uri_value,json=uriValue,proto3" json:"uri_value,omitempty"`
	// ./example.com OK
	UriRefValue string `protobuf:"bytes,21,opt,name=uri_ref_value,json=uriRefValue,proto3" json:"uri_ref_value,omitempty"`
	// 127.0.0.1 OK
	// example.com OK
	AddressValue string `protobuf:"bytes,22,opt,name=address_value,json=addressValue,proto3" json:"address_value,omitempty"`
	// 550e8400-e29b-41d4-a716-446655440000 OK
	UuidValue string `protobuf:"bytes,23,opt,name=uuid_value,json=uuidValue,proto3" json:"uuid_value,omitempty"`
	// 550e8400e29b41d4a716446655440000 OK
	TuuidValue string `protobuf:"bytes,24,opt,name=tuuid_value,json=tuuidValue,proto3" json:"tuuid_value,omitempty"`
	// 255.255.255.0/24 OK
	// 255.255.255.0 NG
	IpWithPreifxlenValue string `protobuf:"bytes,25,opt,name=ip_with_preifxlen_value,json=ipWithPreifxlenValue,proto3" json:"ip_with_preifxlen_value,omitempty"`
	// 255.255.255.0/24 OK
	// 255.255.255.0 NG
	Ipv4WithPreifxlenValue string `protobuf:"bytes,26,opt,name=ipv4_with_preifxlen_value,json=ipv4WithPreifxlenValue,proto3" json:"ipv4_with_preifxlen_value,omitempty"`
	// 2001:0db8:85a3:0000:0000:8a2e:0370:7334/24 OK
	// 2001:0db8:85a3:0000:0000:8a2e:0370:7334 NG
	Ipv6WithPreifxlenValue string `protobuf:"bytes,27,opt,name=ipv6_with_preifxlen_value,json=ipv6WithPreifxlenValue,proto3" json:"ipv6_with_preifxlen_value,omitempty"`
	// 127.0.0.0/16 OK
	// 127.0.0.1/16 NG
	IpPrefixValue string `protobuf:"bytes,28,opt,name=ip_prefix_value,json=ipPrefixValue,proto3" json:"ip_prefix_value,omitempty"`
	// 127.0.0.0/16 OK
	// 127.0.0.1/16 NG
	Ip4PrefixValue string `protobuf:"bytes,29,opt,name=ip4_prefix_value,json=ip4PrefixValue,proto3" json:"ip4_prefix_value,omitempty"`
	// 2001:db8::/48 OK
	// 2001:db8::1/48 NG
	Ip6PrefixValue string `protobuf:"bytes,30,opt,name=ip6_prefix_value,json=ip6PrefixValue,proto3" json:"ip6_prefix_value,omitempty"`
	// 127.0.0.1:8080 OK
	// 127.0.0.1 NG
	// example.com:8080 OK
	// example.com NG
	// [::1]:1234 OK
	HostAndPortValue string `protobuf:"bytes,31,opt,name=host_and_port_value,json=hostAndPortValue,proto3" json:"host_and_port_value,omitempty"`
	// KnownRegex enumを指定する
	// KNOWN_REGEX_HTTP_HEADER_NAME HTTPヘッダー名
	// KNOWN_REGEX_HTTP_HEADER_VALUE HTTPヘッダー値
	WellKownRegexValue string `protobuf:"bytes,32,opt,name=well_kown_regex_value,json=wellKownRegexValue,proto3" json:"well_kown_regex_value,omitempty"`
}

func (x *StringValidationExample) Reset() {
	*x = StringValidationExample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_hello_v1_hello_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValidationExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValidationExample) ProtoMessage() {}

func (x *StringValidationExample) ProtoReflect() protoreflect.Message {
	mi := &file_example_hello_v1_hello_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValidationExample.ProtoReflect.Descriptor instead.
func (*StringValidationExample) Descriptor() ([]byte, []int) {
	return file_example_hello_v1_hello_proto_rawDescGZIP(), []int{3}
}

func (x *StringValidationExample) GetConstValue() string {
	if x != nil {
		return x.ConstValue
	}
	return ""
}

func (x *StringValidationExample) GetLenValue() string {
	if x != nil {
		return x.LenValue
	}
	return ""
}

func (x *StringValidationExample) GetMinLenValue() string {
	if x != nil {
		return x.MinLenValue
	}
	return ""
}

func (x *StringValidationExample) GetMaxLenValue() string {
	if x != nil {
		return x.MaxLenValue
	}
	return ""
}

func (x *StringValidationExample) GetLenBytesValue() string {
	if x != nil {
		return x.LenBytesValue
	}
	return ""
}

func (x *StringValidationExample) GetMinBytesValue() string {
	if x != nil {
		return x.MinBytesValue
	}
	return ""
}

func (x *StringValidationExample) GetMaxBytesValue() string {
	if x != nil {
		return x.MaxBytesValue
	}
	return ""
}

func (x *StringValidationExample) GetPatternValue() string {
	if x != nil {
		return x.PatternValue
	}
	return ""
}

func (x *StringValidationExample) GetPrefixValue() string {
	if x != nil {
		return x.PrefixValue
	}
	return ""
}

func (x *StringValidationExample) GetSuffixValue() string {
	if x != nil {
		return x.SuffixValue
	}
	return ""
}

func (x *StringValidationExample) GetContainsValue() string {
	if x != nil {
		return x.ContainsValue
	}
	return ""
}

func (x *StringValidationExample) GetNotContainsValue() string {
	if x != nil {
		return x.NotContainsValue
	}
	return ""
}

func (x *StringValidationExample) GetInValue() string {
	if x != nil {
		return x.InValue
	}
	return ""
}

func (x *StringValidationExample) GetNotInValue() string {
	if x != nil {
		return x.NotInValue
	}
	return ""
}

func (x *StringValidationExample) GetEmailValue() string {
	if x != nil {
		return x.EmailValue
	}
	return ""
}

func (x *StringValidationExample) GetHostnameValue() string {
	if x != nil {
		return x.HostnameValue
	}
	return ""
}

func (x *StringValidationExample) GetIpValue() string {
	if x != nil {
		return x.IpValue
	}
	return ""
}

func (x *StringValidationExample) GetIpv4Value() string {
	if x != nil {
		return x.Ipv4Value
	}
	return ""
}

func (x *StringValidationExample) GetIpv6Value() string {
	if x != nil {
		return x.Ipv6Value
	}
	return ""
}

func (x *StringValidationExample) GetUriValue() string {
	if x != nil {
		return x.UriValue
	}
	return ""
}

func (x *StringValidationExample) GetUriRefValue() string {
	if x != nil {
		return x.UriRefValue
	}
	return ""
}

func (x *StringValidationExample) GetAddressValue() string {
	if x != nil {
		return x.AddressValue
	}
	return ""
}

func (x *StringValidationExample) GetUuidValue() string {
	if x != nil {
		return x.UuidValue
	}
	return ""
}

func (x *StringValidationExample) GetTuuidValue() string {
	if x != nil {
		return x.TuuidValue
	}
	return ""
}

func (x *StringValidationExample) GetIpWithPreifxlenValue() string {
	if x != nil {
		return x.IpWithPreifxlenValue
	}
	return ""
}

func (x *StringValidationExample) GetIpv4WithPreifxlenValue() string {
	if x != nil {
		return x.Ipv4WithPreifxlenValue
	}
	return ""
}

func (x *StringValidationExample) GetIpv6WithPreifxlenValue() string {
	if x != nil {
		return x.Ipv6WithPreifxlenValue
	}
	return ""
}

func (x *StringValidationExample) GetIpPrefixValue() string {
	if x != nil {
		return x.IpPrefixValue
	}
	return ""
}

func (x *StringValidationExample) GetIp4PrefixValue() string {
	if x != nil {
		return x.Ip4PrefixValue
	}
	return ""
}

func (x *StringValidationExample) GetIp6PrefixValue() string {
	if x != nil {
		return x.Ip6PrefixValue
	}
	return ""
}

func (x *StringValidationExample) GetHostAndPortValue() string {
	if x != nil {
		return x.HostAndPortValue
	}
	return ""
}

func (x *StringValidationExample) GetWellKownRegexValue() string {
	if x != nil {
		return x.WellKownRegexValue
	}
	return ""
}

var File_example_hello_v1_hello_proto protoreflect.FileDescriptor

var file_example_hello_v1_hello_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a,
	0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1d, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x33, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x3a, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x4a, 0x0a, 0x0c, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x76, 0x61,
	0x6c, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x76, 0x61, 0x6c, 0x31,
	0x12, 0x14, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x76, 0x61, 0x6c, 0x32, 0x42, 0x0e, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x12,
	0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xe0, 0x0c, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x72, 0x07, 0x0a, 0x05,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x25, 0x0a, 0x09, 0x6c, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x98, 0x01, 0x05, 0x52, 0x08,
	0x6c, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f,
	0x6c, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x18, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x6c, 0x65, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xa0, 0x01, 0x02, 0x52, 0x0d, 0x6c, 0x65, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x20, 0x02, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba,
	0x48, 0x0f, 0x72, 0x0d, 0x32, 0x0b, 0x5e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x2e, 0x2a,
	0x24, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2f, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x72, 0x07, 0x3a, 0x05, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2f, 0x0a, 0x0c, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x72, 0x07, 0x42, 0x05, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x52, 0x0b, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x34, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x72, 0x08,
	0x4a, 0x06, 0x62, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0x48, 0x0b, 0x72, 0x09, 0xba, 0x01, 0x06, 0x62, 0x61, 0x6e,
	0x61, 0x6e, 0x61, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x48, 0x14, 0x72, 0x12, 0x52, 0x04,
	0x4a, 0x61, 0x76, 0x61, 0x52, 0x06, 0x4b, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x52, 0x02, 0x47, 0x6f,
	0x52, 0x07, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x17, 0xba, 0x48, 0x14, 0x72, 0x12, 0x5a, 0x04, 0x4a, 0x61, 0x76, 0x61, 0x5a, 0x06, 0x4b, 0x6f,
	0x74, 0x6c, 0x69, 0x6e, 0x5a, 0x02, 0x47, 0x6f, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x60, 0x01, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e,
	0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x68, 0x01, 0x52,
	0x0d, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22,
	0x0a, 0x08, 0x69, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x07, 0x69, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x78, 0x01, 0x52,
	0x09, 0x69, 0x70, 0x76, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0x80, 0x01, 0x01, 0x52, 0x09, 0x69, 0x70, 0x76, 0x36, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x75, 0x72, 0x69, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01,
	0x52, 0x08, 0x75, 0x72, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x0d, 0x75, 0x72,
	0x69, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x90, 0x01, 0x01, 0x52, 0x0b, 0x75, 0x72, 0x69,
	0x52, 0x65, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xa8, 0x01, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x75, 0x75, 0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x29, 0x0a, 0x0b, 0x74, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x88, 0x02, 0x01, 0x52,
	0x0a, 0x74, 0x75, 0x75, 0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x17, 0x69,
	0x70, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x69, 0x66, 0x78, 0x6c, 0x65, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x72, 0x03, 0xd0, 0x01, 0x01, 0x52, 0x14, 0x69, 0x70, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72,
	0x65, 0x69, 0x66, 0x78, 0x6c, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x19,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x69, 0x66, 0x78,
	0x6c, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xd8, 0x01, 0x01, 0x52, 0x16, 0x69, 0x70, 0x76, 0x34, 0x57,
	0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x69, 0x66, 0x78, 0x6c, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x43, 0x0a, 0x19, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x65, 0x69, 0x66, 0x78, 0x6c, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xe0, 0x01, 0x01, 0x52, 0x16,
	0x69, 0x70, 0x76, 0x36, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x69, 0x66, 0x78, 0x6c, 0x65,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xe8, 0x01, 0x01, 0x52, 0x0d, 0x69, 0x70, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x69, 0x70, 0x34, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xf0, 0x01, 0x01, 0x52, 0x0e, 0x69, 0x70,
	0x34, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x10,
	0x69, 0x70, 0x36, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xf8, 0x01, 0x01,
	0x52, 0x0e, 0x69, 0x70, 0x36, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x37, 0x0a, 0x13, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0x80, 0x02, 0x01, 0x52, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x64,
	0x50, 0x6f, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3e, 0x0a, 0x15, 0x77, 0x65, 0x6c,
	0x6c, 0x5f, 0x6b, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x72, 0x06, 0xc8,
	0x01, 0x01, 0xc0, 0x01, 0x01, 0x52, 0x12, 0x77, 0x65, 0x6c, 0x6c, 0x4b, 0x6f, 0x77, 0x6e, 0x52,
	0x65, 0x67, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0xb5, 0x01, 0x0a, 0x14, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e,
	0x76, 0x31, 0x42, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2d,
	0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x45, 0x48, 0x58, 0xaa, 0x02, 0x10, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x5c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x3a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_hello_v1_hello_proto_rawDescOnce sync.Once
	file_example_hello_v1_hello_proto_rawDescData = file_example_hello_v1_hello_proto_rawDesc
)

func file_example_hello_v1_hello_proto_rawDescGZIP() []byte {
	file_example_hello_v1_hello_proto_rawDescOnce.Do(func() {
		file_example_hello_v1_hello_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_hello_v1_hello_proto_rawDescData)
	})
	return file_example_hello_v1_hello_proto_rawDescData
}

var file_example_hello_v1_hello_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_example_hello_v1_hello_proto_goTypes = []interface{}{
	(*Hello)(nil),                   // 0: example.hello.v1.Hello
	(*DisabledExample)(nil),         // 1: example.hello.v1.DisabledExample
	(*OneofExample)(nil),            // 2: example.hello.v1.OneofExample
	(*StringValidationExample)(nil), // 3: example.hello.v1.StringValidationExample
}
var file_example_hello_v1_hello_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_example_hello_v1_hello_proto_init() }
func file_example_hello_v1_hello_proto_init() {
	if File_example_hello_v1_hello_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_hello_v1_hello_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_hello_v1_hello_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisabledExample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_hello_v1_hello_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneofExample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_hello_v1_hello_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValidationExample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_example_hello_v1_hello_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*OneofExample_Val1)(nil),
		(*OneofExample_Val2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_hello_v1_hello_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_example_hello_v1_hello_proto_goTypes,
		DependencyIndexes: file_example_hello_v1_hello_proto_depIdxs,
		MessageInfos:      file_example_hello_v1_hello_proto_msgTypes,
	}.Build()
	File_example_hello_v1_hello_proto = out.File
	file_example_hello_v1_hello_proto_rawDesc = nil
	file_example_hello_v1_hello_proto_goTypes = nil
	file_example_hello_v1_hello_proto_depIdxs = nil
}
